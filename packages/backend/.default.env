### AWS S3 STORAGE ###
### These configs are related to the configuration of the interaction with the
### AWS S3 bucket used as storage for ceremony artifacts.

# The AWS access key identifier related to S3 APIs.
AWS_ACCESS_KEY_ID="YOUR-AWS-ACCESS-KEY-ID"
# The AWS secret access key related to S3 APIs.
AWS_SECRET_ACCESS_KEY="YOUR-AWS-SECRET-ACCESS-KEY"
# The AWS region where your buckets are located.
AWS_REGION="YOUR-AWS-REGION"
# The pre-signed URL expiration expressed in seconds.
AWS_PRESIGNED_URL_EXPIRATION="900"
# The postfix used to create S3 buckets for storing the ceremonies artifacts.
AWS_CEREMONY_BUCKET_POSTFIX="-ph2-ceremony"
# The AWS AMI ID (default to Amazon Linux 2).
AWS_AMI_ID="ami-022e1a32d3f742bd8"
# The IAM instance profile for the EC2 instance to assume
AWS_INSTANCE_PROFILE_ARN="YOUR-AWS-INSTANCE-PROFILE-ARN"
# The SNS topic ARN to publish notifications
AWS_SNS_TOPIC_ARN="YOUR-AWS-SNS-TOPIC-ARN"

### GENERIC ###
### These configs are generic and not tied to Firebase or AWS services.

# GitHub OAuth2
## Minimum amount of followers for the GitHub account
GITHUB_MINIMUM_FOLLOWERS="1"
## Minimum amount of users being followed by the GitHub account
GITHUB_MINIMUM_FOLLOWING="5"
## Minimum amount of public repos for the GitHub account
GITHUB_MINIMUM_PUBLIC_REPOS="2"
## Minimum age of the GitHub account (1 month default)
GITHUB_MINIMUM_AGE="2592000000"
## Personal access token for API rate limiting (no privileges required)
GITHUB_ACCESS_TOKEN="YOUR-GITHUB-ACCESS-TOKEN"

### BANDADA AUTHENTICATION ###
# The Bandada API URL to be used for authentication.
BANDADA_API_URL="https://api.bandada.pse.dev"
# The Bandada group id that will be used for the credentials criteria (e.g. "GH > 2 followers")
BANDADA_GROUP_ID="40887196405294111455930028907236"

# The email address of the user who is going to be the coordinator of all ceremonies.
# nb. right now, only one user could be a coordinator for all ceremonies deployed within the same instance.
# Note that the email should be visible from third-party (e.g., Github public email).
# @todo allow to use a custom domain to allow multiple coordinators.
CUSTOM_CLAIMS_COORDINATOR_EMAIL_ADDRESS_OR_DOMAIN="YOUR-EMAIL-ADDRESS-OR-DOMAIN"
# The name of the verification software used to verify a contribution.
# NB. this must match the name of the npm package used to verify contributions as specified on the package.json file.
CUSTOM_CONTRIBUTION_VERIFICATION_SOFTWARE_NAME="snarkjs"
# The version of the verification software (snarkjs) used to verify a contribution.
# NB. this must match the version specified on the package.json file.
CUSTOM_CONTRIBUTION_VERIFICATION_SOFTWARE_VERSION="0.5.0"
# The commit hash of the version of the verification software (snarkjs) used to verify a contribution.
# NB. this must match the commit hash of the release of the version specified on the package.json file.
CUSTOM_CONTRIBUTION_VERIFICATION_SOFTWARE_COMMIT_HASH="6660254b81a3ed86b961df2a9c1b53ccdddc1216"


# Sign In With Ethereum
# URL for an Ethereum node's RPC. If defined, this provider will be used.
ETH_PROVIDER_JSON_URL="https://localhost:8545"
# Alchemy API Key. If defined and the ethers.js default provider is used, this API key will be used for
# the Alchemy provider
ETH_PROVIDER_ALCHEMY_API_KEY="blah"
# Infura API Key. If defined and the ethers.js default provider is used, this API key will be used for
# the Infura provider
ETH_PROVIDER_INFURA_API_KEY="blah"

# When using sign-in with Ethereum, the account's transaction count must be at least this.
ETH_MINIMUM_NONCE="5"
# The tx count will be assessed at this block. Block number or LATEST.
ETH_NONCE_BLOCK_HEIGHT="LATEST"
# The Auth0 application url that support SIWE + Device Flow Authentication
AUTH0_APPLICATION_URL="https://dev-l0tyk1agsmopw1xa.us.auth0.com"
