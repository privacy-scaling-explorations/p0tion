# This environment must be configured both for core functionalities and testing.
# The tests can be executed against a pre-deployed Firebase instance or
# locally on your machine using the Firebase emulator.

### FIREBASE ###
### These configs are related to the configuration of the Firebase services.

# The Firebase Application API key for making request against the services.
# nb. this is going to be auto-generated when creating a new application.
FIREBASE_API_KEY="YOUR-FIREBASE-API-KEY"
# The URL to Firebase Authentication service (should point to default).
# nb. this is going to be auto-generated when creating a new application.
FIREBASE_AUTH_DOMAIN="YOUR-APPLICATION-NAME.firebaseapp.com"
# The Firebase Application project id (should match with application name).
FIREBASE_PROJECT_ID="YOUR-PROJECT-ID"
# The Firebase unique message sender identifier (to recognize the application user).
# nb. this is going to be auto-generated when creating a new application.
FIREBASE_MESSAGING_SENDER_ID="YOUR-MESSAGING-SENDER-ID"
# The Firebase unique identifier for your application.
# nb. this is going to be auto-generated when creating a new application.
FIREBASE_APP_ID="YOUR-APP-ID"
# The Firebase Cloud Function direct URL to call verifycontribution() V2 CF.
# nb. this is necessary due to Version 2 of Cloud Functions which requires direct link to enable HTTPs callable functionalities.
FIREBASE_CF_URL_VERIFY_CONTRIBUTION="YOUR-VERIFY-CONTRIBUTION-CF-URL"

### AWS S3 STORAGE ###
### These configs are related to the configuration of the interaction with the
### AWS S3 bucket used as storage for ceremony artifacts.

# The chunk size to be used when executing multi-part upload or downloads.
# default 50 MBs.
# (e.g. a 200 MB file setting a stream chunk size of 50 MB is going to be split and uploaded/downloaded in 4 chunks).
CONFIG_STREAM_CHUNK_SIZE_IN_MB=50
# The postfix string for each ceremony bucket.
# default "-ph2-ceremony"
CONFIG_CEREMONY_BUCKET_POSTFIX="-ph2-ceremony"
# The amount of time in seconds which indicates the duration about the validity of a pre-signed URL.
# default: 7200 seconds = 2 hours.
CONFIG_PRESIGNED_URL_EXPIRATION_IN_SECONDS=7200
# AWS S3 access keys only required for unit/e2e testing (can be omitted)
# The AWS access key identifier related to S3 APIs.
AWS_ACCESS_KEY_ID="YOUR-AWS-ACCESS-KEY-ID"
# The AWS secret access key related to S3 APIs.
AWS_SECRET_ACCESS_KEY="YOUR-AWS-SECRET-ACCESS-KEY"
# The AWS region where your buckets are located.
AWS_REGION="YOUR-AWS-REGION"
# The AWS AMI ID (default to Amazon Linux 2).
AWS_AMI_ID="ami-022e1a32d3f742bd8"
# The IAM instance profile for the EC2 instance to assume
AWS_INSTANCE_PROFILE_ARN="YOUR-AWS-INSTANCE-PROFILE-ARN"
# The AWS tag key for each element to create (comply to PSE's AWS policy)
AWS_TAG_VALUE="trusted-setup"

### AUTHENTICATION ###
### These configs are related to the authentication of users.

# The unique identifier for the Github client associated to the OAuth Application.
AUTH_GITHUB_CLIENT_ID="YOUR-GITHUB-CLIENT-ID"
# A GitHub personal access token
GITHUB_ACCESS_TOKEN="YOUR_GITHUB_ACCESS_TOKEN"

### For production testing purposes only.

# The email of the user associated to a Google account.
# default: use a GMail account to enable correct simulation using puppeteer package.
AUTH_USER_EMAIL="USER-EMAIL"
# The password of the user associated to a Google account.
AUTH_GITHUB_USER_PW="USER-EMAIL-PW"
# The GMail APIs client identifier associated with the Google account.
# nb. you should enable GMail APIs manually.
AUTH_GMAIL_CLIENT_ID="GMAIL-CLIENT-ID"
# The GMail APIs client secret associated with the Google account.
# nb. you should enable GMail APIs manually.
AUTH_GMAIL_CLIENT_SECRET="GMAIL-CLIENT-SECRET"
# The GMail APIs redirect URL associated with the Google account.
# nb. you should enable GMail APIs manually.
AUTH_GMAIL_REDIRECT_URL="GMAIL-REDIRECT-URL"
# The GMail APIs refresh token associated with the Google account.
# nb. you should enable GMail APIs manually.
AUTH_GMAIL_REFRESH_TOKEN="GMAIL-REFRESH-TOKEN"
